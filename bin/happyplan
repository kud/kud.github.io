#!/usr/bin/env node

/**
 * Module dependencies.
 */

var programme = require('commander'),
    sys = require('sys'),
    spawn = require('child_process').spawn,
    fs = require('fs'),
    readline = require('readline')
    moment = require('moment');

programme
  .command('*')
  .version('0.0.1');

programme
  .command('dev')
  .description('development mode')
  .action(function(){
    var grunt = spawn('grunt');

    grunt.stdout.on('data', function (data) {
      process.stdout.write('' + data);
    });
  });

programme
  .command('dist')
  .description('distributing mode')
  .action(function(){
    var grunt = spawn('grunt', ['dist']);

    grunt.stdout.on('data', function (data) {
      process.stdout.write('' + data);
    });
  });

programme
  .command('newpost')
  .description('create a new post')
  .action(function() {
    // Config
    var basePath = 'src/',
        postName = 'fixme';
        currentDate = moment().format('YYYY-MM-DD');

    // Create Interface
    var rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout
    });

    rl.question('What is your post? ', function(answer) {
        if(answer !== '') {
            postName = answer;
        }

        // Template
        var fileContent = [
          '---',
          'layout: post',
          'title: "' + postName + '"',
          'tags: [\'removemeifunneeded\']',
          '---'
        ].join('\n');

        fs.writeFile(basePath + '_posts/_drafts/' + currentDate + '-' + postName.toLowerCase().split(' ').join('-').split(',').join('') + '.md', fileContent);

        rl.close();
    });
  });

programme
  .command('init')
  .description('initialize')
  .action(function(){
    var grunt = spawn('grunt', ['happyPlan:init']);

    grunt.stdout.on('data', function (data) {
      process.stdout.write('' + data);
    });
  });

programme
  .command('publish')
  .description('publish on github')
  .action(function(){
    var publish = spawn('./bin/publish.sh');

    publish.stdout.on('data', function (data) {
      process.stdout.write('' + data);
    });
  });

if(process.argv.length == 2) {
  programme.help();
}

programme.parse(process.argv);

